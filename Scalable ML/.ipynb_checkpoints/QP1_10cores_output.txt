Conda uses environments to load different sets of Python packages
type conda env list to see the environments availible.
Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
22/05/12 03:27:44 INFO SparkContext: Running Spark version 3.2.1
22/05/12 03:27:45 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
22/05/12 03:27:45 WARN SparkConf: Note that spark.local.dir will be overridden by the value set by the cluster manager (via SPARK_LOCAL_DIRS in mesos/standalone/kubernetes and LOCAL_DIRS in YARN).
22/05/12 03:27:45 INFO ResourceUtils: ==============================================================
22/05/12 03:27:45 INFO ResourceUtils: No custom resources configured for spark.driver.
22/05/12 03:27:45 INFO ResourceUtils: ==============================================================
22/05/12 03:27:45 INFO SparkContext: Submitted application: Assignment_1
22/05/12 03:27:45 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
22/05/12 03:27:45 INFO ResourceProfile: Limiting resource is cpu
22/05/12 03:27:45 INFO ResourceProfileManager: Added ResourceProfile id: 0
22/05/12 03:27:45 INFO SecurityManager: Changing view acls to: acp21jka
22/05/12 03:27:45 INFO SecurityManager: Changing modify acls to: acp21jka
22/05/12 03:27:45 INFO SecurityManager: Changing view acls groups to: 
22/05/12 03:27:45 INFO SecurityManager: Changing modify acls groups to: 
22/05/12 03:27:45 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(acp21jka); groups with view permissions: Set(); users  with modify permissions: Set(acp21jka); groups with modify permissions: Set()
22/05/12 03:27:45 INFO Utils: Successfully started service 'sparkDriver' on port 41799.
22/05/12 03:27:45 INFO SparkEnv: Registering MapOutputTracker
22/05/12 03:27:45 INFO SparkEnv: Registering BlockManagerMaster
22/05/12 03:27:45 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
22/05/12 03:27:45 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
22/05/12 03:27:45 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
22/05/12 03:27:45 INFO DiskBlockManager: Created local directory at /mnt/fastdata/acp21jka/blockmgr-3857ca77-523e-475f-8db4-362f1a1011e1
22/05/12 03:27:45 INFO MemoryStore: MemoryStore started with capacity 5.2 GiB
22/05/12 03:27:45 INFO SparkEnv: Registering OutputCommitCoordinator
22/05/12 03:27:46 INFO Utils: Successfully started service 'SparkUI' on port 4040.
22/05/12 03:27:46 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://sharc-node174.shef.ac.uk:4040
22/05/12 03:27:46 INFO Executor: Starting executor ID driver on host sharc-node174.shef.ac.uk
22/05/12 03:27:46 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 46056.
22/05/12 03:27:46 INFO NettyBlockTransferService: Server created on sharc-node174.shef.ac.uk:46056
22/05/12 03:27:46 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
22/05/12 03:27:46 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, sharc-node174.shef.ac.uk, 46056, None)
22/05/12 03:27:46 INFO BlockManagerMasterEndpoint: Registering block manager sharc-node174.shef.ac.uk:46056 with 5.2 GiB RAM, BlockManagerId(driver, sharc-node174.shef.ac.uk, 46056, None)
22/05/12 03:27:46 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, sharc-node174.shef.ac.uk, 46056, None)
22/05/12 03:27:46 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, sharc-node174.shef.ac.uk, 46056, None)
/home/acp21jka/.conda/envs/myspark/lib/python3.6/site-packages/pyspark/python/lib/pyspark.zip/pyspark/context.py:238: FutureWarning: Python 3.6 support is deprecated in Spark 3.2.
  FutureWarning
22/05/12 03:27:47 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
22/05/12 03:27:47 INFO SharedState: Warehouse path is 'file:/data/acp21jka/ScalableML/HPC/spark-warehouse'.
There are 5000000 rows in the full training set, and 1000000 in the full test set
There are 39763 rows in the smaller training set, and 10083 in the smaller test set

############################## RF ################################
Accuracy for best rf model after hyperparameter tuning on small train data = 0.504711 
Best RF model params-
{
    "bootstrap": true,
    "cacheNodeIds": false,
    "checkpointInterval": 10,
    "featureSubsetStrategy": "auto",
    "featuresCol": "features",
    "impurity": "gini",
    "labelCol": "labels",
    "leafCol": "",
    "maxBins": 10,
    "maxDepth": 10,
    "maxMemoryInMB": 256,
    "minInfoGain": 0.0,
    "minInstancesPerNode": 1,
    "minWeightFractionPerNode": 0.0,
    "numTrees": 20,
    "predictionCol": "prediction",
    "probabilityCol": "probability",
    "rawPredictionCol": "rawPrediction",
    "seed": 210116270,
    "subsamplingRate": 0.9
}
############################# Full Datasets on Random Forest #################################
Train time for RF model 134.58389544487
Test time for RF model 4.857990741729736
Accuracy for best random forest model on whole dataset = 0.500543 
Area under Receiver Operating Characteristic Curve: 0.501
Area under Precision Recall Curve: 0.500

############################## LR ################################
Accuracy for best lr model after hyperparameter tuning on small train data = 0.503818 
Best LR model params-
{
    "aggregationDepth": 2,
    "elasticNetParam": 0.3,
    "family": "binomial",
    "featuresCol": "features",
    "fitIntercept": true,
    "labelCol": "labels",
    "maxBlockSizeInMB": 0.0,
    "maxIter": 25,
    "predictionCol": "prediction",
    "probabilityCol": "probability",
    "rawPredictionCol": "rawPrediction",
    "regParam": 0.01,
    "standardization": true,
    "threshold": 0.5,
    "tol": 1e-06
}
############################# Full Datasets on Logistic Regression #################################
Train time for LR model 46.18553376197815
Test time for LR model 4.112951993942261
Accuracy for best logistic regression model on whole dataset = 0.499462 
Area under Receiver Operating Characteristic Curve: 0.500
Area under Precision Recall Curve: 0.499

############################## MPC ################################
Accuracy for best mpc model after hyperparameter tuning on small train data = 0.512645 
Best MPC model params-
{
    "blockSize": 128,
    "featuresCol": "features",
    "labelCol": "labels",
    "maxIter": 25,
    "predictionCol": "prediction",
    "probabilityCol": "probability",
    "rawPredictionCol": "rawPrediction",
    "seed": 210116270,
    "solver": "l-bfgs",
    "stepSize": 0.1,
    "tol": 1e-06,
    "layers": [
        128,
        20,
        2
    ]
}
############################# Full Datasets on Multilayer Perceptron Classifier #################################
Train time for MPC model 176.26611948013306
Test time for MPC model 3.221040964126587
Accuracy for best Multilayer Perceptron Classifier model on whole dataset = 0.499811 
Area under Receiver Operating Characteristic Curve: 0.500
Area under Precision Recall Curve: 0.499
##############################################################
Accuracy for best Random Forest model on trainset = 0.53157 
Accuracy for best Logistic Regression model on trainset = 0.50017 
Accuracy for best Multilayer Perceptron Classifier model on trainset = 0.500969 
